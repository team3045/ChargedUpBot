// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot;


import edu.wpi.first.math.kinematics.DifferentialDriveKinematics;

//import com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase;

//import edu.wpi.first.math.Vector;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj2.command.Command;
import frc.robot.math.Vector2;

/**
 * The Constants class provides a convenient place for teams to hold robot-wide numerical or boolean
 * constants.  This class should not be used for any other purpose.  All constants should be
 * declared globally (i.e. public static).  Do not put anything functional in this class.
 *
 * <p>It is advised to statically import this class (or one of its inner classes) wherever the
 * constants are needed, to reduce verbosity.
 */
public class Constants {
 //Balance  
   public static final double kPitchDeadspot = 5;
   public static final double kSpeedMult = 5;
   public static final double kRotationPerSecondMax = 0.01;

//Claw Constants
   public static double clawSpeed = 0.2;

   //Fourbar target position
   public static double highPos = 75000;
   public static double midPos = 66000;
   public static double lowPos = 20000;

   public static double fourbarTolerance = 2000;
   
   //Falcons
   public static int lMotor1 = 1;
   public static int lMotor2 = 0;
   public static int lMotor3 = 2;
   public static int rMotor1 = 4;
   public static int rMotor2 = 3;
   public static int rMotor3 = 5;

   //Fourbar positions
   public static int lowPosID = 6;
   public static int midPosID = 7;
   public static int highPosID = 8;

   //Zero position to calibrate position of both fourbar or telescoping arm
   public static double armZero=0;
   public static int pigeonCanId = 9;

   //Auton Constants
   public static String[] trajectoryJSONS = new String[] { "paths/Unnamed.wpilib.json",  
                                                           "paths/Unnamed.wpilib.json"};
   public static String[][] routineCommands = new String[][] { new String[] { "fbhigh", "intakecone", "fblow", "back"}, 
                                                               new String[] { "fbhigh", "intakecone", "fblow", "balanceback", "balance"}};
   public static double[][] routineTimes = new double[][] { new double[] { 0, 0, 0, 0 }, 
                                                            new double[] { 0, 0, 0, 0, 0 }};

   public static double ksVolts = 12;
   public static double kvVoltSecondsPerMeter = 2.619;
   public static double kaVoltSecondsSquaredPerMeter = 0.205;

   public static DifferentialDriveKinematics kDriveKinematics = new DifferentialDriveKinematics(0.635);

   public static double kPDriveVel = 0.05;

   public static double kRamseteB = 2.0;
   public static double kRamseteZeta = 0.7;

   public static String layoutPATH = "paths/ChargedUp.json";
   public static double defaultSpeed = 0.5;
   public static double targetFBVel = 2300;
}

